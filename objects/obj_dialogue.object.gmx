<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// set text parameters //
draw_set_halign(fa_left);
draw_set_valign(fa_left);
draw_set_font(fnt_start_cut);
draw_set_colour(c_white);

strcharpos = 0; // position of list to take character from
scrolltimer = 0; // timer to control text holding and rate of scrolling of text
printed = ""; // the text to be printed
dialoguecontrol = false; // false = off // true = on //
holdingdialogue = false; // false = not // true = close //

closemessage = "'C' to exit"
closemessageprint = ""

if room = room_level1 {
    box[1] = "Speaker: So, have you figured out how to use the device? Make sure #you're comfortable with it before you move on."
    
    box[2] = "Voice from speaker: I assume my colleagues have already filled you in. #Try and get through the puzzle rooms."
    
    box[3] = ""
}

if room = room_level2 {
    box[1] = "The buttons on the pushblock platform look like they require something #heavy to activate them..."
    
    box[2] = ""
    
    box[3] = ""
}

if room = room_boss {
    box[1] = ".... testing"
    
    box[2] = "test2......................."
}

printedline = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// close dialogue ///
if keyboard_check(ord('C')) {
    if dialoguecontrol = false {
        if room = room_boss {
        
        } else {
            global.movecontrollock = false;
        }
        holdingdialogue = false;
        
        scrolltimer = 0;
        strcharpos = 0;
        
        closemessageprint = "";
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// dialogue control start ///

// if room is level1 //
if dialoguecontrol = true {
    
    draw_set_halign(fa_left);
    draw_set_valign(fa_left);
    draw_set_colour(c_white);
    draw_set_font(fnt_start_cut);

    draw_sprite(spr_dialogue_bg,0,0,649);
    
        scrolltimer ++;        

        // if scroll timer &gt;= 3 // 
            if scrolltimer &gt;= 2 {
                
                // character to be added = list(printedline, strcharpos) //
                // printed phrase = current printed phrase + character //
                //character = ds_list_find_value(printedline, strcharpos);
                printed = string_copy(box[printedline],1,strcharpos + 1)
                
                strcharpos ++;
                scrolltimer = 0;
                
                holdingdialogue = true;
                if room = room_boss {
                
                } else {
                    global.movecontrollock = true;
                }
            }
        
        // if list position &gt;= size of printing list, reset variables //
        if strcharpos &gt;= string_length(box[printedline]) {
            
            scrolltimer = 0;
            strcharpos = 0;
            dialoguecontrol = false;
        
        }
        draw_text(20,653,printed);
}                 

    if holdingdialogue = true {
        
        draw_set_halign(fa_left);
        draw_set_valign(fa_left);
        draw_set_colour(c_white);
        draw_set_font(fnt_start_cut);
        
        draw_sprite(spr_dialogue_bg,0,0,649);
        draw_text(20,653,printed);
        
        if dialoguecontrol = false {
        
            draw_set_font(fnt_dialogue_close);
        
            scrolltimer ++;
            
            if scrolltimer &gt;= 2 {
                closemessageprint = string_copy(closemessage,1,strcharpos + 1)
                
                strcharpos ++;
                scrolltimer = 0;
            }
            
            draw_text(851,683,closemessageprint);
            
        }
    }

/// dialogue control end ///
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
