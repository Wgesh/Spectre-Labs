<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = 100;

//global.startselection = 0; // startgame = 0 // tutorial = 1 // keeps track of selection
//global.startselectlock = 1; // locked = 0 // unlocked = 1 // locks level selection during obj_titlescreen_selector sliding
//global.startselectoptionlock = 1; // locked = 0 // unlocked = 1 // locks ability to select level after level is chosen
global.fadein = 0; // fadein = 0 // fadeout = 1 // states whether to fade in or out

global.button1state = false; // false = off // true = on // controls buttonstate of obj_button1
global.button2state = false; // false = off // true = on // controls buttonstate of obj_button2
global.button3state = false; // false = off // true = on // controls buttonstate of obj_button3
global.button4state = false; // false = off // true = on // controls buttonstate of obj_button4
global.button5_n1state = false; // false = off // true = on // controls buttonstate of obj_button5_n1
global.button5_n2state = false; // false = off // true = on // controls buttonstate of obj_button5_n2
global.button6state = false; // false = off // true = on // controls buttonstate of obj_button6

global.lever1state = false; // false = off // true = on // controls buttonstate of obj_lever1
global.lever2state = false; // false = off // true = on // controls buttonstate of obj_lever2
global.lever3state = false; // false = off // true = on // controls buttonstate of obj_lever3

global.movecontrollock = true; // notlocked = false // locked = true // controls locking player movement
global.blockmovelock = false; // notlocked = false // locked = true // controls locking pushblock movement

global.block1stuck = false; // not in use
global.block1stuckdir = 0; // 1 = 0deg // 2 = 90deg // 3 = 180 deg // 4 = 270deg

global.playermoving = 0; // moving = 1 // not moving = 0 // not in use
global.level = 0; // not in use

global.bosswave = -1; // controls which wave number //
global.enemies1 = 0; // enemy1 count //
global.enemies2 = 0; // enemy2 count //
global.enemies3 = 0; // enemy3 count //
global.bosspart = 1;

global.playerhealth = 100;

// allows player to shoot gun when initialize created in boss room
if room = room_boss {
    global.lasergun = true;
} else {
    global.lasergun = false;
}

global.restarting = false; // restarting game or not //

randomize(); // randomize seed for random numbers //

// in room start cut setup start dialogue
if room = room_start_cut {

    // set text parameters
    draw_set_halign(fa_left);
    draw_set_valign(fa_left);
    draw_set_font(fnt_start_cut);
    draw_set_colour(c_white);
    
    
    starttext = true; // enabled = true // disabled = false // controls one time usage of code
    starthold = true; // enabled = true // disabled = false // holds starting text for a short time
    strcharpos = 0; // position of list to take character from
    scrolltimer = 0 // timer to control text holding and rate of scrolling of text
    printed = "&gt;" // the text to be printed
    
    // variables with stored dialogue text
    page1 = "&gt;  Welcome to Spectre Labs.
    #     
    #You've signed up to be a prototype tester for an
    #obscure company you've never heard of before, but
    #the pay was good, so you decided to go for it. They
    #picked you up in a military grade car with tinted
    #windows and drove you off to an unknown location.
    #You were escorted through the maze-like building by
    #speakers hidden in the walls. You now find yourself
    #in an enclosed, clean-looking facility, surrounded
    #by thick metal walls..."
    
    page2 = "You find an advanced-looking device on the
    #floor in front of you and decide to take a look.
    #The multiple straps on the gadget suggest it is
    #meant to be worn. When you put it on your arm, the
    #straps automatically tighten and the device is
    #now secured to yourself.
    #     
    #Voice from speaker: So you figured out how to put it
    #on? Very nice. A lot of people mess that up. That
    #device you're wearing bridges the gap between our
    #'regular' world and the spectral world."
    
    page3 = "Speaker: You're able to control your spectral
    #counterpart of yourself with that. To activate and
    #record your movements in spectral form, press 'Q'.
    #The device allows you to record for five seconds
    #before automatically returning yourself to your
    #original body. To playback your recording in the form
    #of your spectral body, press 'E'. Your recording will
    #be saved in the device to play as many times as you
    #like until you create a new recording. Now enough
    #talk from me, go ahead and try it out!"

    printedline = page1; // set the current printing line
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw recording effects ///

with obj_player {
    if recording = true {
        draw_set_colour(c_white);
        draw_set_alpha(0.2);
        draw_sprite(spr_record_overlay,-1,0,0);
        draw_set_alpha(1);
        
        draw_set_font(fnt_start_cut);
        draw_text(10,10,"recording...");
    }  
    
    if global.playingback = true {
        draw_set_colour(c_white);
        draw_set_font(fnt_start_cut);
        draw_text(10,10,"playing...");
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw darkness effect ///

if room = room_vent {
    draw_set_alpha(0.8);
    draw_sprite(spr_fade,-1,0,0);
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw player healthbar ///

// draws player hp in top right with rectangle sizes multiplied by 3 since hp bar is 300px wide
if global.bosswave &gt;= 1 {
    var drawinghealth = global.playerhealth * 3
    
    if room = room_boss {
        draw_sprite(spr_player_health_bar_bg,-1,10,10);
        
        if global.playerhealth &gt;= 57 {
            draw_set_colour(make_colour_rgb(101, 205, 41));
        } else if global.playerhealth &lt; 57 and global.playerhealth &gt;= 30 {
            draw_set_colour(make_colour_rgb(204, 206, 24));
        } else if global.playerhealth &lt; 30 {
            draw_set_colour(make_colour_rgb(155, 8, 58));
        }
        
        if drawinghealth &gt;= 172 {
        
            draw_rectangle(20,20,drawinghealth+19,27,false);
            draw_rectangle(20,20,190,34,false);
            
        } else if drawinghealth &lt; 172 {
        
            draw_rectangle(20,20,drawinghealth+19,34,false);
            
        }
        
        if global.playerhealth &lt;= 0 {
            global.movecontrollock = true
            global.playerhealth = 0;
            global.restarting = true
            global.fadein = 1;
            instance_create(0,0,obj_fade);
        }
        draw_sprite(spr_player_health_bar,-1,17,17);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// game restart text ///
if room = room_game_restart {
    draw_set_halign(fa_center);
    draw_set_valign(fa_center);
    draw_set_font(fnt_wave_text);
    draw_set_colour(c_white);
    
    draw_text(480,352,"YOU DIED...
    # 
    #PRESS 'SPACE'
    #TO RESTART");
    
    audio_stop_sound(snd_laser_beam);
    
    if keyboard_check_pressed(vk_space) {
        global.fadein = 1;
        instance_create(0,0,obj_fade);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// titlescreen selector drawing taken out of game
/*
/// title screen drawing ///
if room = room_title_screen {
    draw_set_halign(fa_center);
    draw_set_valign(fa_center);
    draw_set_font(fnt_startscreen);
    draw_set_colour(c_white);
    draw_text(480,250,"SPECTRE LABS");
    
    draw_set_font(fnt_startscreen_message);
    draw_text(480,400,"Press 'space' to start");
    
    if keyboard_check_pressed(vk_space) {
        global.startselection = 1
        global.fadein = 1
        instance_create(0,0,obj_fade);
    }
}

// draws out selections in the title screen, create selector reference //
if room = room_title_screen {
    draw_set_halign(fa_middle);
    draw_set_valign(fa_middle);
    draw_set_font(fnt_startscreen);
    draw_set_colour(c_gray);
    
    //instance_create(480,317,obj_titlescreen_selector_ref);
    
    draw_text(480,317,"Start  Game");
    draw_text(480,387,"Tutorial");

// colours selection word white when obj_titlescreen_selector selects it //
    if global.startselection = 0 and obj_titlescreen_selector_left.x &lt; obj_titlescreen_selector_ref_top.x - 130 {
        draw_set_colour(c_white);
        draw_text(480,317,"Start  Game");
    }
    
    if global.startselection = 1  and obj_titlescreen_selector_left.x &gt; obj_titlescreen_selector_ref_bot.x - 120  {
        draw_set_colour(c_white);
        draw_text(480,387,"Tutorial");
    }
} */
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// start game cut ///

// if room is start cut //
if room = room_start_cut {

    // if starttext enabled, draw starting text //
    if starttext = true {
        draw_text(128,100,printed);
    }
    
    // if movecontrollock is unlocked //
    if global.movecontrollock = true {

        scrolltimer ++;        
        
        // if scrolltimer &gt;= 50, disables one time code and holding text, set scrolltimer to 0 //
        if scrolltimer &gt;= 50 and starttext = true {
            starthold = false;
            starttext = false;
            scrolltimer = 0;
        }
        
        // if holding text is disabled, if scroll timer &gt;= 3 // 
        if starthold = false {
            if scrolltimer &gt;= 3 {
                
                // character to be added = list(printedline, strcharpos) //
                // printed phrase = current printed phrase + character //
                //character = ds_list_find_value(printedline, strcharpos);
                printed = string_copy(printedline,1,strcharpos + 1)
                
                strcharpos ++;
                scrolltimer = 0;
                 
            }
        }
        
        // if list position &gt;= size of printing list, printing line = script start lines //
        if strcharpos &gt;= string_length(printedline) {
            starthold = true
            
            if scrolltimer &gt;= 240 and printedline = page1 {
                printedline = page2
                scrolltimer = 0;
                starthold = false;
                strcharpos = 0;
            }
            
            if scrolltimer &gt;= 240 and printedline = page2 {
                printedline = page3
                scrolltimer = 0;
                starthold = false;
                strcharpos = 0;
            }
            
            if scrolltimer &gt;= 240 and printedline = page3 {
                global.fadein = 1;
                instance_create(0,0,obj_fade);
            }
        }
                 
        // draw printed //
        draw_text(128,100,printed);
    
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// drawing player while recording ///

with obj_player {
    if recording = true {
        draw_set_alpha(0.8);
        draw_sprite(spr_player_idle,-1,recordstartingx,recordstartingy);
        draw_set_alpha(1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
