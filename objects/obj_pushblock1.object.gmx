<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_pushblock</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// setup start ///

movement = 1; // 0 disabled // 1 enabled //
movetimer = 0; // to stall player movement //
slidetimer = 0; // smooth animation sliding of block //

/// setup start ///
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_movement_sliding(2,16);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// blockstuck check start ///

// global.block1stuck = false

global.block1stuckdir = 0;

if place_meeting(x+32,y,obj_metal_floor) and place_meeting(x-32,y,obj_player) {

    global.block1stuckdir = 1

}

if place_meeting(x,y+32,obj_player) {
    if place_meeting(x,y-32,obj_metal_floor)
    or place_meeting(x,y-32,obj_door_left_red)
    or place_meeting(x,y+32,obj_door_right_red){
        
        global.block1stuckdir = 2
    
    }
} 

if place_meeting(x-32,y,obj_metal_floor) and place_meeting(x+32,y,obj_player) {

    global.block1stuckdir = 3
    
}

if place_meeting(x,y-32,obj_player) {
    if place_meeting(x,y+32,obj_metal_floor)
    or place_meeting(x,y+32,obj_door_left_red)
    or place_meeting(x,y+32,obj_door_right_red) {
        
        global.block1stuckdir = 4
    
    }
    
} 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// player push checking start ///

with obj_player {
    if recording = true {
        global.blockmovelock = true
    } else {
        global.blockmovelock = false;
    }
}

// checks for meeting obj_player and not meeting obj_metal_floor in next position //
// sets alarm, slidetimer, movement, movetimer //
if global.blockmovelock = false {

if place_meeting(x-2,y,obj_player) or place_meeting(x-2,y,obj_ghost) {
    if movement = 1 {
        direction = 0;
        
        if !place_meeting(x+32,y,obj_metal_floor) {
            slidetimer = 0;
            alarm[0] = 1;
            
            movement = 0;
            movetimer = 16;
        } else {
            global.block1stuck = false
        }
    }
}

if place_meeting(x+2,y,obj_player) or place_meeting(x+2,y,obj_ghost) {
    if movement = 1 {
        direction = 180;
        
        if !place_meeting(x-32,y,obj_metal_floor) {
            slidetimer = 0;
            alarm[0] = 1;
            
            movement = 0;
            movetimer = 16;
        } else {
            global.block1stuck = false
        }
    }
}

if place_meeting(x,y-2,obj_player) or place_meeting(x,y-2,obj_ghost){
    if movement = 1 {
        direction = 270;
        
        if !place_meeting(x,y+32,obj_metal_floor)
        and !place_meeting(x,y+32,obj_door_left_red)
        and !place_meeting(x,y+32,obj_door_right_red) {
            slidetimer = 0;
            alarm[0] = 1;
            
            movement = 0;
            movetimer = 16;
        } else {
            global.block1stuck = false
        }
    }
}

if place_meeting(x,y+2,obj_player) or place_meeting(x,y+2,obj_ghost){
    if movement = 1 {
        direction = 90;
        
        if !place_meeting(x,y-32,obj_metal_floor)
        and !place_meeting(x,y-32,obj_door_left_red)
        and !place_meeting(x,y-32,obj_door_right_red) {
            slidetimer = 0;
            alarm[0] = 1;
            
            movement = 0;
            movetimer = 16;
        } else {
            global.block1stuck = false
        }
    }
}

}
/// player push checking end ///
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// stalled movement start ///

// if disabled movement, decrease movetimer //
if movement = 0 {
    movetimer -= 1;
}

// if movetimer &lt;= 0, enable movement //
if movetimer &lt;= 0 {
    movement = 1;
}

/// stalled movement end ///
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
