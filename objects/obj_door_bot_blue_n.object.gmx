<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_door_bot_blue_n</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// setup start ///

slidetimer = 0; // smooth animation sliding of door //
doorstate = 0; // 0 closing // 1 opening //
closepos = y; // closed x position //
openpos = y+43; // open x position //

depth = -6; // let door slide behind other sprites //

/// setup end ///
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// sliding effect start ///

// if openpos &lt; current x pos, if doorstate opening, decrease x //
if openpos &gt; y {
    if doorstate = 1 {
        y += 1;
    }
}

// if closepos &gt; current x pos, if doorstate closing, increase x //
if closepos &lt; y {
    if doorstate = 0 {
        y -= 1;
    }
}

// increase slidetimer //
slidetimer += 1;

// if slidetimer &lt; 32, restart alarm //
if slidetimer &lt; 43 {
    alarm[0] = 1;
}

/// sliding effect end ///
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// open door start ///
// if button1 on, doorstate opening, slidetimer 0, start alarm [0] //
if global.button5_n1state = true and global.button5_n2state = true {
    doorstate = 1;
    slidetimer = 0;
    alarm[0] = 1;
}
/// open door end ///

/// close door start ///
// if not meeting player between doors, if closepos &lt; current x pos, if button1 off, door state closing, slidetimer 0, start alarm [0] //
if !place_meeting(x,y+32,obj_player) and !place_meeting(x,y-64,obj_player) {
if closepos &lt; y {
    if global.button5_n1state = false or global.button5_n2state = false {
        doorstate = 0;
        slidetimer = 0;
        alarm[0] = 1;
    }
}
}
/// close door end ///
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
