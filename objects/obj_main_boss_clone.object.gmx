<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_main_boss</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enemyhealth = 10; // enemy health //

shoottimer = 0; // timing of firing laser objects
firingratetimer = 0; // firing rate timer //
firing = false; // firing or not //
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// shoot control ///
if global.bosswave = 4 {
    if global.bosspart = 1 {
        
        firingratetimer ++;
        
        if firing = true {
            shoottimer ++;
            
            if !audio_is_playing(snd_laser_beam) {
                audio_play_sound(snd_laser_beam,5,true);
            }
            
            if shoottimer = 10 {
                laser = instance_create(x,y,obj_enemy_laser2);
                laser2 = instance_create(x,y,obj_enemy_laser2);
                laser3 = instance_create(x,y,obj_enemy_laser2);
                
                laser.speed = 5;
                laser2.speed = 5;
                laser3.speed = 5;
                
                if x &gt; 608 {
                    laser.direction = 180;
                    laser2.direction = 90;
                    laser3.direction = 270;
                    
                    laser.image_angle = 180;
                    laser2.image_angle = 90;
                    laser3.image_angle = 270;
                } else {
                    laser.direction = 0;
                    laser2.direction = 90;
                    laser3.direction = 270;
                    
                    laser2.image_angle = 90;
                    laser3.image_angle = 270;
                }
            } 
            
            if shoottimer &gt;= 15 {
                laser = instance_create(x,y,obj_enemy_laser2_beam);
                laser2 = instance_create(x,y,obj_enemy_laser2_beam);
                laser3 = instance_create(x,y,obj_enemy_laser2_beam);
                
                laser.speed = 5;
                laser2.speed = 5;
                laser3.speed = 5;
                
                if x &gt; 608 {
                    laser.direction = 180;
                    laser2.direction = 90;
                    laser3.direction = 270;
                    
                    laser2.image_angle = 90;
                    laser3.image_angle = 270;
                } else {
                    laser.direction = 0;
                    laser2.direction = 90;
                    laser3.direction = 270;
                    
                    laser2.image_angle = 90;
                    laser3.image_angle = 270;
                }
                
                shoottimer = 11;
            }
        } else {
            audio_stop_sound(snd_laser_beam);
        }
        
        if firingratetimer &gt;= 360 {
            firingratetimer = 0;
            
            if firing = false {
                shoottimer = 0;
                firing = true;
            } else {
                firing = false;
            }
        }
    }
    
    if global.bosspart = 2 {
        
        firingratetimer ++;
        
        if firing = true {
            shoottimer ++;
            
            if !audio_is_playing(snd_laser_beam) {
                audio_play_sound(snd_laser_beam,5,true);
            }
            
            if shoottimer = 10 {
                laser = instance_create(x,y,obj_enemy_laser2);
                laser2 = instance_create(x,y,obj_enemy_laser2);
                laser3 = instance_create(x,y,obj_enemy_laser2);
                
                laser.speed = 5;
                laser2.speed = 5;
                laser3.speed = 5;
                
                if y &lt; 464 {
                    laser.direction = 270;
                    laser2.direction = 0;
                    laser3.direction = 180;
                    
                    laser.image_angle = 270;
                    laser3.image_angle = 180;
                } else {
                    laser.direction = 90;
                    laser2.direction = 0;
                    laser3.direction = 180;
                    
                    laser.image_angle = 90;
                    laser3.image_angle = 180;
                }
            } 
            
            if shoottimer &gt;= 15 {
                laser = instance_create(x,y,obj_enemy_laser2_beam)
                laser2 = instance_create(x,y,obj_enemy_laser2_beam)
                laser3 = instance_create(x,y,obj_enemy_laser2_beam)
                
                laser.speed = 5;
                laser2.speed = 5;
                laser3.speed = 5;
                
                if y &lt; 464 {
                    laser.direction = 270;
                    laser2.direction = 0;
                    laser3.direction = 180;
                    
                    laser.image_angle = 90;
                    laser3.image_angle = 180;
                } else {
                    laser.direction = 90;
                    laser2.direction = 0;
                    laser3.direction = 180;
                    
                    laser.image_angle = 90;
                    laser3.image_angle = 180;
                }
                
                shoottimer = 11;
            }
        } else {
            audio_stop_sound(snd_laser_beam);
        }
        
        if firingratetimer &gt;= 480 {
            firingratetimer = 0;
            
            if firing = false {
                shoottimer = 0;
                firing = true;
            } else {
                firing = false;
                audio_stop_sound(snd_laser_beam);
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// sprite control ///
if x &gt;= 608 {
    image_xscale = -1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// kill check ///
scr_enemy_kill_check(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
